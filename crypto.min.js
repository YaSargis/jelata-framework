const CADESCOM_CADES_X_LONG_TYPE_1=93,CAPICOM_CURRENT_USER_STORE=2,CAPICOM_MY_STORE="My",CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED=2,CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME=1,CADESCOM_CADES_BES=1,CAPICOM_CERTIFICATE_FIND_SHA1_HASH=0;authorize={ecpInit:()=>new Promise((resolve,reject)=>{cadesplugin.then(()=>{let thenable;authorize.GetSerts().then(certs=>{resolve({status:"Система настроена корректно для работы с ЭЦП",result:!0,certs:certs})})}).catch(g=>{reject({status:g,result:!1})})}),ecpPostInit:()=>new Promise((resolve,reject)=>{cadesplugin.then(()=>{let thenable;authorize.GetSerts().then(certs=>{resolve({status:"Система настроена корректно для работы с ЭЦП",result:!0,certs:certs})})}).catch(g=>{reject({status:g,result:!1})})}),GetSerts:()=>new Promise(function(resolve,reject){cadesplugin.async_spawn(function*(args){try{var certs=[],oStore=yield cadesplugin.CreateObjectAsync("CAdESCOM.Store");yield oStore.Open(2,"My",2);var CertificatesObj=yield oStore.Certificates,t=yield CertificatesObj.Count;for(let index=0;index<t;index++){var g=yield CertificatesObj.Item(index+1),r=yield g.Thumbprint,d=yield g.ValidToDate,f=yield g.ValidFromDate,sn=yield g.SubjectName;new Date(d)>new Date&&certs.push({thumbprint:r,valid:d,sname:`${authorize.extract(sn,"CN")}, ${f.substring(8,10)}.${f.substring(5,7)}.${f.substring(0,4)}-${d.substring(8,10)}.${d.substring(5,7)}.${d.substring(0,4)}`})}yield oStore.Close(),console.log(certs),args[0](certs)}catch(err){args[1]("Failed to create signature. Error: "+cadesplugin.getLastError(err))}},resolve,reject)}),extract(from,what){certName="";var begin=from.indexOf(what)+3;if(begin>=0){var end=from.indexOf(", ",begin);certName=end<0?from.substr(begin):from.substr(begin,end-begin)}return certName.replace(/"/g,"")},ecpLogin:(login,pass,url)=>{}},mdlp={signRequest:(data,cert)=>new Promise(function(resolve,reject){cadesplugin.async_spawn(function*(args){try{var oStore=yield cadesplugin.CreateObjectAsync("CAdESCOM.Store");yield oStore.Open(2,"My",2);var CertificatesObj=yield oStore.Certificates,oCertificates=yield CertificatesObj.Find(0,cert),Count;if(0==(yield oCertificates.Count))throw"Невозможно найти сертификат с указанным свойством: "+args[0];var oCertificate=yield oCertificates.Item(1),oSigner=yield cadesplugin.CreateObjectAsync("CAdESCOM.CPSigner");yield oSigner.propset_Certificate(oCertificate);var oSignedData=yield cadesplugin.CreateObjectAsync("CAdESCOM.CadesSignedData");oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY),yield oSignedData.propset_Content(data);var sSignedMessage=yield oSignedData.SignCades(oSigner,1,!0);yield oStore.Close(),args[2](sSignedMessage)}catch(e){args[3]("Failed to create signature. Error: "+cadesplugin.getLastError(e))}},cert,data,resolve,reject)})};
//# sourceMappingURL=crypto.min.js.map